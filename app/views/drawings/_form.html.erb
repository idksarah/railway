<canvas id="canvas" width="600" height="600" style="border: 1px solid #000"></canvas>

<%= form_with model: @drawing, local: true, html: { multipart: true } do |form| %>
  <%= hidden_field_tag :image_data, "", id: "image-data" %>
  <%= form.submit "SUBMIT DRAWING", class:"italic cursor-pointer accent", onclick: "prepareImage()" %>
<% end %>

<script>
  const canvas = document.getElementById("canvas");
  canvas.crossOrigin = "anonymous";
  const ctx = canvas.getContext("2d");

  const baseImg = new Image();
baseImg.crossOrigin = "anonymous"; 

// <% if @drawing.image.attached? %>
//   baseImg.src = "<%= @drawing.image_url %>";
// <% else %>
//   baseImg.src = "/proxy_image?url=" + encodeURIComponent("https://hc-cdn.hel1.your-objectstorage.com/...base.png");
// <% end %>
baseImg.src = "/proxy_image?url=" + encodeURIComponent("https://hc-cdn.hel1.your-objectstorage.com/s/v3/1fe23d40dc58ddaa6c91bd22c6553f489d4fdfac_base.png");

  baseImg.onload = () => {
    ctx.drawImage(baseImg, 0, 0, canvas.width, canvas.height);
  };

  let drawing = false;
  canvas.addEventListener("mousedown", () => { drawing = true; });
  canvas.addEventListener("mouseup", () => { drawing = false; ctx.beginPath(); });
  canvas.addEventListener("mousemove", draw);

  function draw(e) {
    if (!drawing) return;
    ctx.lineWidth = 2.5;
    ctx.lineCap = "round";
    ctx.strokeStyle = "black";

    ctx.lineTo(e.offsetX, e.offsetY);
    ctx.stroke();
    ctx.beginPath();
    ctx.moveTo(e.offsetX, e.offsetY);
  }
function prepareImage() {
  const dataUrl = canvas.toDataURL("image/png"); 
  document.getElementById("image-data").value = dataUrl;

  fetch("https://cdn.hackclub.com/api/v3/new", {
    method: "POST",
    headers: {
      "Authorization": "Bearer ${API_TOKEN}",
      "Content-Type": "application/json"
    },
    body: JSON.stringify([dataUrl])
  })
    .then(response => response.json())
    .then(data => {
      console.log("Uploaded!", data);
    })
    .catch(error => console.error("UPLOAD FAILED", error));
}

</script>
